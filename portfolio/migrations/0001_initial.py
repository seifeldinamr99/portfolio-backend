# Generated by Django 5.2.5 on 2025-08-20 16:16

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('asset_type', models.CharField(choices=[('ETF', 'ETF'), ('Stock', 'Stock'), ('Bond', 'Bond'), ('Sukuk', 'Sukuk'), ('Index', 'Index'), ('Commodity', 'Commodity')], max_length=50)),
                ('market', models.CharField(choices=[('Saudi', 'Saudi'), ('International', 'International'), ('Global', 'Global')], max_length=50)),
                ('currency', models.CharField(choices=[('SAR', 'Saudi Riyal'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound')], default='USD', max_length=3)),
                ('is_shariah_compliant', models.BooleanField(default=False)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('data_provider_config', models.JSONField(default=dict)),
                ('inception_date', models.DateField(blank=True, null=True)),
                ('expense_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'assets',
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='Benchmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('currency', models.CharField(choices=[('SAR', 'Saudi Riyal'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound')], default='USD', max_length=3)),
                ('market_focus', models.CharField(choices=[('Saudi', 'Saudi'), ('GCC', 'GCC'), ('Global', 'Global'), ('Sector', 'Sector')], max_length=50)),
                ('data_provider_config', models.JSONField(default=dict)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'benchmarks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(max_length=100)),
                ('portfolio_type', models.CharField(choices=[('ETF', 'ETF'), ('Composite', 'Composite'), ('Model', 'Model')], max_length=50)),
                ('base_currency', models.CharField(choices=[('SAR', 'Saudi Riyal'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound')], default='USD', max_length=3)),
                ('is_predefined', models.BooleanField(default=True)),
                ('rebalancing_rule', models.CharField(choices=[('none', 'None'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], default='none', max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'portfolios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('open', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('high', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('low', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('close', models.DecimalField(decimal_places=4, max_digits=12)),
                ('adjusted_close', models.DecimalField(decimal_places=4, max_digits=12)),
                ('volume', models.BigIntegerField(default=0)),
                ('currency', models.CharField(choices=[('SAR', 'Saudi Riyal'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound')], default='USD', max_length=3)),
                ('data_provider', models.CharField(choices=[('yfinance', 'Yahoo Finance'), ('manual', 'Manual Entry')], default='yfinance', max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='portfolio.asset')),
            ],
            options={
                'db_table': 'historical_prices',
                'ordering': ['-date'],
                'unique_together': {('asset', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AssetPortfolioMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=4, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('1'))])),
                ('effective_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_mappings', to='portfolio.asset')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_mappings', to='portfolio.portfolio')),
            ],
            options={
                'db_table': 'asset_portfolio_mappings',
                'ordering': ['-effective_date', '-weight'],
                'unique_together': {('portfolio', 'asset', 'effective_date')},
            },
        ),
    ]
